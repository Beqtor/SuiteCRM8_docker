services:
  suitecrm:
    # Mantenemos el build para que use tu Dockerfile
    build: ./
    # Eliminamos la línea 'image: suitecrm:latest' para que EasyPanel nombre la imagen
    networks:
      - suitecrm_net
    volumes:
      # SuiteCRM Application Folder (CRÍTICO: Si el código de SuiteCRM está en ./www)
      - ./www:/var/www/html
      # Log Folders (No causan conflicto, se mantienen para la persistencia)
      - ./logs/SuiteCRM:/var/www/html/SuiteCRM/logs
      - ./logs/SuiteCRM_Core/suitecrm.log:/var/www/html/SuiteCRM/public/legacy/suitecrm.log
      - ./logs/apache:/var/log/apache2/
      - ./logs/php:/var/log/php/
      
      # ELIMINAMOS VOLÚMENES DE CONFIGURACIÓN DE PHP/APACHE/SSL 
      # (Tu Dockerfile ya debe manejar estas configuraciones, y EasyPanel se encarga del SSL)
      
    env_file:
      - environment/sample.env
    # Eliminamos la sección 'ports'
    restart: on-failure
    labels:
      - me.titmus.authors="jon@titmus.me"

  mysql_crm:
    image: mysql
    # Eliminamos la sección 'ports'
    environment:
      - MYSQL_ROOT_PASSWORD=suitecrm
      - MYSQL_USER=suitecrm
      - MYSQL_PASSWORD=suitecrm
      - MYSQL_DATABASE=suitecrm
    volumes:
      - ./docker/data/mysql:/var/lib/mysql
    networks:
      - suitecrm_net
    restart: on-failure
    
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    links:
      - mysql_crm
    # Eliminamos la sección 'ports'
    environment:
      - PMA_HOST=mysql_crm
      - PMA_USER=suitecrm
      - PMA_PASSWORD=suitecrm
    networks:
      - suitecrm_net
    restart: no

networks:
    suitecrm_net:
        driver: bridge
